exports.__esModule = true;
require("@drozdik.m/string-extensions/dist/EndsWith");
require("@drozdik.m/string-extensions/dist/ExtractFileExtension");
var map_1 = require("@drozdik.m/map");
var KeyValuePair_1 = require("@drozdik.m/pair/dist/KeyValuePair");
var FileType;
(function (FileType) {
    FileType[FileType["UNKNOWN"] = 0] = "UNKNOWN";
    FileType[FileType["HTML"] = 1] = "HTML";
    FileType[FileType["STYLE"] = 2] = "STYLE";
    FileType[FileType["SCRIPT"] = 3] = "SCRIPT";
    FileType[FileType["IMAGE"] = 4] = "IMAGE";
})(FileType = exports.FileType || (exports.FileType = {}));
var File = /** @class */ (function () {
    //--------------------------------------------------
    //---------CONSTRUCTOR------------------------------
    //--------------------------------------------------
    function File(path) {
        this.path = path;
        this.fileType = this.CalculateFileType(this.path);
    }
    //--------------------------------------------------
    //---------METHODS----------------------------------
    //--------------------------------------------------
    /**
     * Returns current file name
     * */
    File.prototype.GetName = function () {
        return this.path;
    };
    //--------------------------------------------------
    //---------FILE TYPE--------------------------------
    //--------------------------------------------------
    /**
     * Returns current file type
     * */
    File.prototype.GetFileType = function () {
        return this.fileType;
    };
    /**
     * Returns FileType enum based on input file path
     * @param filePath File path
     */
    File.prototype.CalculateFileType = function (filePath) {
        //Get variables
        var filePathLowercase = filePath.toLocaleLowerCase().split("?")[0];
        var fileExtension = filePathLowercase.ExtractFileExtension();
        //Search the map
        var mapRes = File.fileTypeMap.FindValue(fileExtension);
        if (mapRes.HasValue())
            return mapRes.PairValue();
        //Unknown type
        return FileType.UNKNOWN;
    };
    File.formats = [
        //IMAGES
        new KeyValuePair_1.KeyValuePair("jpeg", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("jpg", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("png", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("gif", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("exif", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("tiff", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("svg", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("webp", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("bmp", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("ppm", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("pgm", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("pbm", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("pnm", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("hdr", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("heif", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("bat", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("bpg", FileType.IMAGE),
        new KeyValuePair_1.KeyValuePair("cgm", FileType.IMAGE),
        //STYLES
        new KeyValuePair_1.KeyValuePair("css", FileType.STYLE),
        new KeyValuePair_1.KeyValuePair("scss", FileType.STYLE),
        //SCRIPTS
        new KeyValuePair_1.KeyValuePair("js", FileType.SCRIPT),
        new KeyValuePair_1.KeyValuePair("ts", FileType.SCRIPT),
        //HTML
        new KeyValuePair_1.KeyValuePair("html", FileType.HTML),
        new KeyValuePair_1.KeyValuePair("htm", FileType.HTML),
    ];
    File.fileTypeMap = new map_1.Map(File.formats);
    return File;
}());
exports.File = File;
