exports.__esModule = true;
var ValuePair = /** @class */ (function () {
    /**
     * Creates new instance of a pair
     * @param first First value (default = null)
     * @param second Second value (default = null)
     */
    function ValuePair(first, second) {
        if (first === void 0) { first = null; }
        if (second === void 0) { second = null; }
        this.first = null;
        this.second = null;
        this.first = first;
        this.second = second;
    }
    /**
     * Returns value of first
     * */
    ValuePair.prototype.First = function () {
        return this.first;
    };
    /**
     * Returns value of second
     * */
    ValuePair.prototype.Second = function () {
        return this.second;
    };
    /**
     * Sets first value
     * @param value New value
     */
    ValuePair.prototype.SetFirst = function (value) {
        this.first = value;
    };
    /**
     * Sets second value
     * @param value New value
     */
    ValuePair.prototype.SetSecond = function (value) {
        this.second = value;
    };
    /**
    * To string
    */
    ValuePair.prototype.toString = function () {
        console.log(this.first + ", " + this.second);
    };
    ValuePair.prototype.Clone = function () {
        //Copy key
        var newFirst;
        if (typeof this.first.Clone != "undefined")
            newFirst = this.first.Clone();
        else
            newFirst = this.first;
        //Copy value
        var newSecond;
        if (typeof this.second.Clone != "undefined")
            newSecond = this.second.Clone();
        else
            newSecond = this.second;
        var res = new ValuePair(newFirst, newSecond);
        return res;
    };
    return ValuePair;
}());
exports.ValuePair = ValuePair;
