exports.__esModule = true;
var dialog_window_1 = require("@drozdik.m/dialog-window");
var youtube_1 = require("@drozdik.m/youtube");
var YoutubeStates_1 = require("@drozdik.m/youtube/dist/src/YoutubeStates");
var YoutubeDialogWindow = /** @class */ (function () {
    //--------------------------------------------------
    //----------PROPERTIES------------------------------
    //--------------------------------------------------
    //--------------------------------------------------
    //----------CONSTRUCTOR-----------------------------
    //--------------------------------------------------
    function YoutubeDialogWindow() {
    }
    /**
     * Ensures that the environment is created
     * */
    YoutubeDialogWindow.EnsureCreatedEnvironment = function () {
        if (YoutubeDialogWindow.environmentCreated)
            return;
        YoutubeDialogWindow.environmentCreated = true;
        document.body.insertAdjacentHTML("beforeend", "\n            <div id=\"youtubeDialogWindow\">\n                <div id=\"youtubeDialogWindowPlayer\"></div>\n            </div>\n        ");
        YoutubeDialogWindow.globalPlayerDialogWindow = new dialog_window_1.DialogWindow("youtubeDialogWindow");
        YoutubeDialogWindow.globalPlayerDialogWindow.OnClose.Add(function () {
            YoutubeDialogWindow.globalPlayer.Stop();
        });
    };
    /**
     * Returns target dialog window for player
     * */
    YoutubeDialogWindow.GetPlayerDialogWindow = function () {
        YoutubeDialogWindow.EnsureCreatedEnvironment();
        return YoutubeDialogWindow.globalPlayerDialogWindow;
    };
    /**
     * Returns target youtube player
     * */
    YoutubeDialogWindow.GetYoutubePlayer = function () {
        YoutubeDialogWindow.EnsureCreatedEnvironment();
        if (YoutubeDialogWindow.globalPlayer == null)
            YoutubeDialogWindow.globalPlayer = new youtube_1.YoutubePlayer("youtubeDialogWindowPlayer");
        return YoutubeDialogWindow.globalPlayer;
    };
    //--------------------------------------------------
    //----------FACTORIES-------------------------------
    //--------------------------------------------------
    /**
     * Binds elements with input data attribute to open the youtube dialog window
     * @param dataAttributePostfix The data attribute postfix to target (f.e. "youtube" will match "data-youtube=xxx")
     */
    YoutubeDialogWindow.BindDataAttributes = function (dataAttributePostfix) {
        var fullAttributeName = "data-" + dataAttributePostfix;
        var elements = document.querySelectorAll("[" + fullAttributeName + "]");
        var _loop_1 = function (i) {
            var videoId = elements[i].getAttribute(fullAttributeName);
            elements[i].addEventListener("click", function (e) {
                e.preventDefault ? e.preventDefault() : (e.returnValue = false);
                var dialogWindow = YoutubeDialogWindow.GetPlayerDialogWindow();
                dialogWindow.Open();
                var player = YoutubeDialogWindow.GetYoutubePlayer();
                if (player.GetState() == YoutubeStates_1.YoutubePlayerState.NotReady) {
                    player.OnReady.Add(function () {
                        player.Load(videoId);
                        player.Play();
                        dialogWindow.Update();
                    });
                }
                else {
                    player.Load(videoId);
                    player.Play();
                }
            });
        };
        for (var i = 0; i < elements.length; i++) {
            _loop_1(i);
        }
    };
    //--------------------------------------------------
    //----------ENVIRONMENT-----------------------------
    //--------------------------------------------------
    YoutubeDialogWindow.environmentCreated = false;
    YoutubeDialogWindow.globalPlayerDialogWindow = null;
    YoutubeDialogWindow.globalPlayer = null;
    return YoutubeDialogWindow;
}());
exports.YoutubeDialogWindow = YoutubeDialogWindow;
