exports.__esModule = true;
var web_unit_test_1 = require("@drozdik.m/web-unit-test");
var unit_test_1 = require("@drozdik.m/unit-test");
var Ajax_1 = require("../../src/Ajax");
function Repeat(string) {
    return fetch("http://localhost:8888?repeat=" + string).then(function (response) {
        return response.text();
    });
}
var unitTest = new unit_test_1.UnitTest("Ajax");
unitTest.AddAsyncTestCase("Repeater localhost:8888 test", function (Done, Fail) {
    Repeat("1234").then(function (data) {
        try {
            unit_test_1.Assert.AreEqual("1234", data);
            Done();
        }
        catch (_a) {
            Fail();
        }
    });
});
unitTest.AddAsyncTestCase("Single GET", function (Done, Fail) {
    var ajax = new Ajax_1.Ajax();
    ajax.Get("http://localhost:8888", [
        new Ajax_1.AjaxParameter("repeat", "1234")
    ]).Then(function (args) {
        try {
            unit_test_1.Assert.AreEqual("1234", args.Response());
            Done();
        }
        catch (_a) {
            Fail();
        }
    }).Catch(function (error) {
        Fail();
    });
});
unitTest.AddAsyncTestCase("Multiple GET", function (Done, Fail) {
    var ajax = new Ajax_1.Ajax();
    var responses = 30;
    var j = 0;
    var _loop_1 = function (i) {
        ajax.Get("http://localhost:8888", [
            new Ajax_1.AjaxParameter("repeat", i.toString())
        ]).Then(function (args) {
            try {
                unit_test_1.Assert.AreEqual(i, args.Response());
                responses--;
                unit_test_1.Assert.AreEqual(j++, i);
            }
            catch (_a) {
                Fail();
            }
        }).Catch(function (error) {
            Fail();
        });
    };
    for (var i = 0; i < 30; i++) {
        _loop_1(i);
    }
    var interval = setInterval(function () {
        if (responses == 0) {
            clearInterval(interval);
            Done();
        }
    }, 50);
});
unitTest.AddAsyncTestCase("Non-http error GET", function (Done, Fail) {
    var ajax = new Ajax_1.Ajax();
    ajax.Get("http://nowhere").Then(function (args) {
        Fail();
    }).Catch(function (error) {
        Done();
    });
});
unitTest.AddAsyncTestCase("Http error GET", function (Done, Fail) {
    var ajax = new Ajax_1.Ajax();
    ajax.Get("http://localhost:8888/error").Then(function (args) {
        Fail();
    }).Catch(function (error) {
        Done();
    });
});
unitTest.AddAsyncTestCase("Success callback", function (Done, Fail) {
    var ajax = new Ajax_1.Ajax();
    ajax.OnSuccess.Add(function (caller, args) {
        try {
            unit_test_1.Assert.AreEqual("1234", args.Response().Response());
            Done();
        }
        catch (_a) {
            Fail();
        }
    });
    ajax.Get("http://localhost:8888", [
        new Ajax_1.AjaxParameter("repeat", "1234")
    ]);
});
unitTest.AddAsyncTestCase("Error callback", function (Done, Fail) {
    var ajax = new Ajax_1.Ajax();
    ajax.OnError.Add(function (caller, args) {
        try {
            unit_test_1.Assert.AreEqual("500", args.Response().Status());
            Done();
        }
        catch (_a) {
            Fail();
        }
    });
    ajax.Get("http://localhost:8888/error", [
        new Ajax_1.AjaxParameter("repeat", "1234")
    ]);
});
var browserTestAgent = new web_unit_test_1.BrowserTestAgent(unitTest);
browserTestAgent.Run();
