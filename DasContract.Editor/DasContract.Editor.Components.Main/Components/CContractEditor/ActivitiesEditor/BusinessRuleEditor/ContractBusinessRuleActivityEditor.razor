@inherits LoadableComponent

<div class="contractBusinessRuleActivityEditor">
    <LoadingScreenAnimation Fullscreen="@Loading" />

    <div class="contractBusinessRuleActivityEditorDMN" id="@Id"></div>

    <AlertController @ref="@alertController" />

    <div class="my-3 text-right">
        <ButtonInput Scheme="ButtonInputScheme.Danger" OnClick="async () => { await RevertAsync(); }">Revert</ButtonInput>
        <ButtonInput Scheme="ButtonInputScheme.Success" OnClick="async () => { await SaveAsync(); }">Confirm</ButtonInput>
    </div>
</div>

<DialogWindow @ref="@revertDialogWindow" Title="Revert confirmation">
    <Body>
        <p>Do you really want to revert the diagram to the last saved state?</p>
    </Body>
    <Footer>
        <ButtonInput Scheme="ButtonInputScheme.Danger"
                     OnClick="async () => { await ConfirmRevertAsync(); }">
            Revert
        </ButtonInput>
    </Footer>
</DialogWindow>

<DialogWindow @ref="@saveDialogWindow" Title="Rewrite confirmation">
    <Body>
        <p class="h4">Do you really want to rewrite the diagram?</p>
        <p>The following will happen:</p>
        @if (saveIntegrityResult != null)
        {
            <DeleteAnalysisResult AnalysisResult="@saveIntegrityResult" />
        }

    </Body>
    <Footer>
        @if (saveIntegrityResult != null)
        {
            <ButtonInput Scheme="saveIntegrityResult.HasDeleteRisks() ? ButtonInputScheme.Danger : ButtonInputScheme.Success"
                         OnClick="async () => { await ConfirmSaveAsync(); }">
                Confirm
            </ButtonInput>
        }
    </Footer>
</DialogWindow>