@inherits FileInputBase
@inject IMaterialBootstrapLanguageDictionary LanguageDictionary

    <div class="uploadableFileInputWrapper my-3">
        <LoadingScreenAnimation Loading="@Loading" />

        @if (State == UploadableFileInputState.Selecting)
        {
            <FileInput Id="@Id"
                       Label="@Label"
                       Accept="@Accept"
                       Capture="@Capture"
                       Description="@Description"
                       Multiple="@Multiple"
                       ReadOnly="@ReadOnly"
                       OnChange="@OnFileSelectionChangeAsync"
                       Name="@Name"
                       />
            @if (FilesToUpload.Count > 0)
            {
                <ButtonInput Disabled="@ReadOnly" OnClick="@StartUploadingAsync">
                    @LanguageDictionary.GetContent(MaterialBootstrapLanguageDictionary.UploadableFileInputUpload)
                </ButtonInput>
            }
        }
        else if (State == UploadableFileInputState.Uploading)
        {
            <p><strong>@LanguageDictionary.GetContent(MaterialBootstrapLanguageDictionary.UploadableFileInputUploading)</strong></p>
            @foreach (var file in FilesToUpload)
            {
                var scheme = ProgressBarScheme.Primary;
                if (file.UploadSuccess)
                    scheme = ProgressBarScheme.Success;
                else if (file.UploadError)
                    scheme = ProgressBarScheme.Danger;

                <div class="fileUploadingBarWrapper my-2">
                    <div class="fileUploadingBarText">
                        <p class="fileUploadingBarName">@file.Name <small class="text-muted fileUploadingBarSize">@NumberToMB(file.SizeUploaded) / @NumberToMB(file.Size)</small></p>
                    </div>
                    <ProgressBar Minimum="0" Maximum="@file.Size" Current="@file.SizeUploaded"
                                 Scheme="scheme" />
                </div>

                if (file.UploadError)
                {
                    <Alert Scheme="AlertScheme.Danger">@file.ErrorMessage</Alert>
                }
            }
        }
        else if (State == UploadableFileInputState.Finished)
        {
    <Alert Scheme="AlertScheme.Success">@LanguageDictionary.GetContent(MaterialBootstrapLanguageDictionary.UploadableFileInputDone)</Alert>
    <ButtonInput Disabled="@ReadOnly" OnClick="@Reset">@LanguageDictionary.GetContent(MaterialBootstrapLanguageDictionary.UploadableFileInputUploadMore)</ButtonInput>
        }
    </div>