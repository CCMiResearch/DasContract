exports.__esModule = true;
var dimensions_helper_1 = require("@drozdik.m/dimensions-helper");
var window_events_1 = require("@drozdik.m/window-events");
var event_1 = require("@drozdik.m/event");
var ElementResizeWatcher = /** @class */ (function () {
    /**
     * Resize watcher calls event only when width or height of the element has changed
     * @param element The element to track
     */
    function ElementResizeWatcher(element) {
        this.OnResize = new event_1.Event();
        this.width = -1;
        this.height = -1;
        this.element = element;
        this.dimensionsHelper = new dimensions_helper_1.DimensionsHelper(this.element);
        var object = this;
        window_events_1.WindowEvents.OnResize.Add(function () {
            if (object.HasChanged())
                object.OnResize.Invoke(object, new window_events_1.ResizeArgs(object.element));
        });
    }
    /**
     * Checks if the elements dimensions has changes and if so, it updates stored info
     * @returns True if element has changed, else false
     * */
    ElementResizeWatcher.prototype.HasChanged = function () {
        if (this.dimensionsHelper.Width() != this.width ||
            this.dimensionsHelper.Height() != this.height) {
            this.width = this.dimensionsHelper.Width();
            this.height = this.dimensionsHelper.Height();
            return true;
        }
        return false;
    };
    return ElementResizeWatcher;
}());
exports.ElementResizeWatcher = ElementResizeWatcher;
