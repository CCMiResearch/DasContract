exports.__esModule = true;
var web_unit_test_1 = require("@drozdik.m/web-unit-test");
var unit_test_1 = require("@drozdik.m/unit-test");
var CookiesController_1 = require("../../src/CookiesController");
var cookie_1 = require("@drozdik.m/cookie");
var unitTest = new unit_test_1.UnitTest("Cookies Controller");
unitTest.AddTestCase("Permit", function () {
    var permissionCookie = new cookie_1.Cookie("TermsAndConditions");
    permissionCookie.Delete();
    var controller = new CookiesController_1.CookiesController();
    unit_test_1.Assert.IsFalse(controller.AllowedToUse());
    var i = 0;
    controller.OnPermit.Add(function () {
        unit_test_1.Assert.IsTrue(controller.AllowedToUse());
        i++;
    });
    controller.Permit();
    unit_test_1.Assert.IsTrue(controller.AllowedToUse());
    unit_test_1.Assert.AreEqual(1, i);
});
unitTest.AddTestCase("Forbid", function () {
    var permissionCookie = new cookie_1.Cookie("TermsAndConditions");
    permissionCookie.Delete();
    var controller = new CookiesController_1.CookiesController();
    unit_test_1.Assert.IsFalse(controller.AllowedToUse());
    var cookie1 = new cookie_1.Cookie("cookie1");
    var cookie2 = new cookie_1.Cookie("cookie2");
    var cookie3 = new cookie_1.Cookie("cookie3");
    cookie1.Set("cookie1");
    cookie2.Set("cookie2");
    cookie3.Set("cookie3");
    controller.Add(cookie1);
    controller.Add(cookie2);
    controller.Add(cookie3);
    var i = 0;
    controller.OnPermit.Add(function () {
        unit_test_1.Assert.IsTrue(controller.AllowedToUse());
        i++;
    });
    controller.Permit();
    unit_test_1.Assert.IsTrue(controller.AllowedToUse());
    unit_test_1.Assert.AreEqual(1, i);
    unit_test_1.Assert.IsTrue(cookie1.Exists());
    unit_test_1.Assert.IsTrue(cookie2.Exists());
    unit_test_1.Assert.IsTrue(cookie3.Exists());
    controller.OnForbid.Add(function () {
        unit_test_1.Assert.IsFalse(controller.AllowedToUse());
        i += 2;
    });
    controller.Forbid();
    unit_test_1.Assert.IsFalse(controller.AllowedToUse());
    unit_test_1.Assert.IsFalse(cookie1.Exists());
    unit_test_1.Assert.IsFalse(cookie2.Exists());
    unit_test_1.Assert.IsFalse(cookie3.Exists());
});
var browserTestAgent = new web_unit_test_1.BrowserTestAgent(unitTest);
browserTestAgent.Run();
