exports.__esModule = true;
var unit_test_1 = require("@drozdik.m/unit-test");
var Option_1 = require("../src/Option");
var unitTest = new unit_test_1.UnitTest("Option");
unitTest.AddTestCase("Is defined", function () {
    var option1 = new Option_1.Option(1);
    var option2 = new Option_1.Option("yep");
    var option3 = new Option_1.Option({});
    unit_test_1.Assert.IsTrue(option1.IsDefined());
    unit_test_1.Assert.IsTrue(option2.IsDefined());
    unit_test_1.Assert.IsTrue(option3.IsDefined());
    var undefined;
    unit_test_1.Assert.IsFalse(new Option_1.Option(undefined).IsDefined());
    unit_test_1.Assert.IsFalse(new Option_1.Option(null).IsDefined());
});
unitTest.AddTestCase("Is empty", function () {
    var option1 = new Option_1.Option(1);
    var option2 = new Option_1.Option("yep");
    var option3 = new Option_1.Option({});
    unit_test_1.Assert.IsFalse(option1.IsEmpty());
    unit_test_1.Assert.IsFalse(option2.IsEmpty());
    unit_test_1.Assert.IsFalse(option3.IsEmpty());
    var undefined;
    unit_test_1.Assert.IsTrue(new Option_1.Option(undefined).IsEmpty());
    unit_test_1.Assert.IsTrue(new Option_1.Option(null).IsEmpty());
});
unitTest.AddTestCase("Get value", function () {
    var option1 = new Option_1.Option(1);
    var option2 = new Option_1.Option("yep");
    var option3 = new Option_1.Option({});
    var undefined;
    var option4 = new Option_1.Option(undefined);
    var option5 = new Option_1.Option(null);
    unit_test_1.Assert.AreEqual(1, option1.Get());
    unit_test_1.Assert.AreEqual("yep", option2.Get());
    unit_test_1.Assert.IsTrue(typeof option3.Get() == "object");
    try {
        option4.Get();
        unit_test_1.Assert.Fail();
    }
    catch (e) {
    }
    try {
        option5.Get();
        unit_test_1.Assert.Fail();
    }
    catch (e) {
    }
});
unitTest.Run();
