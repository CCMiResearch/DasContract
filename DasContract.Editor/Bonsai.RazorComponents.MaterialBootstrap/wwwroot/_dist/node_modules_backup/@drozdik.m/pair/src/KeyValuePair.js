exports.__esModule = true;
var KeyValuePair = /** @class */ (function () {
    /**
     * Creates new instance of a pair
     * @param key Key (default = null)
     * @param value Value (default = null)
     */
    function KeyValuePair(key, value) {
        if (key === void 0) { key = null; }
        if (value === void 0) { value = null; }
        this.key = null;
        this.value = null;
        this.key = key;
        this.value = value;
    }
    /**
     * Returns key
     * */
    KeyValuePair.prototype.Key = function () {
        return this.key;
    };
    /**
     * Returns value
     * */
    KeyValuePair.prototype.Value = function () {
        return this.value;
    };
    /**
     * Sets value
     * @param value New value
     */
    KeyValuePair.prototype.SetValue = function (value) {
        this.value = value;
    };
    /**
    * To string
    */
    KeyValuePair.prototype.toString = function () {
        return this.key + ", " + this.value;
    };
    KeyValuePair.prototype.Clone = function () {
        //Copy key
        var newKey;
        if (typeof this.key.Clone != "undefined")
            newKey = this.key.Clone();
        else
            newKey = this.key;
        //Copy value
        var newValue;
        if (typeof this.value.Clone != "undefined")
            newValue = this.value.Clone();
        else
            newValue = this.value;
        var res = new KeyValuePair(newKey, newValue);
        return res;
    };
    return KeyValuePair;
}());
exports.KeyValuePair = KeyValuePair;
