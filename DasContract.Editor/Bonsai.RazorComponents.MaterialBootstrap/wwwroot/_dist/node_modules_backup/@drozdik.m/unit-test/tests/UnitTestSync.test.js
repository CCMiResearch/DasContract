exports.__esModule = true;
var UnitTest_1 = require("../src/UnitTest");
var unitTest = new UnitTest_1.UnitTest("Assert Test");
unitTest.AddTestCase("Fail assert", function () {
    var err = false;
    try {
        UnitTest_1.Assert.Fail();
        err = true;
    }
    catch (e) {
    }
    if (err)
        throw "Fail failed";
});
unitTest.AddTestCase("Basic assert", function () {
    UnitTest_1.Assert.Assert(true);
    try {
        UnitTest_1.Assert.Assert(false);
        UnitTest_1.Assert.Fail();
    }
    catch (e) {
    }
});
unitTest.AddTestCase("Equal assert", function () {
    UnitTest_1.Assert.AreEqual("1", "1");
    try {
        UnitTest_1.Assert.AreEqual("1", "2");
        UnitTest_1.Assert.Fail();
    }
    catch (_a) { }
    UnitTest_1.Assert.AreNotEqual("1", "2");
    try {
        UnitTest_1.Assert.AreNotEqual("1", "1");
        UnitTest_1.Assert.Fail();
    }
    catch (_b) { }
});
unitTest.AddTestCase("Same assert", function () {
    UnitTest_1.Assert.AreSame("s", "a");
    try {
        UnitTest_1.Assert.AreSame("s", 1);
        UnitTest_1.Assert.Fail();
    }
    catch (_a) { }
    UnitTest_1.Assert.AreNotSame("s", {});
    try {
        UnitTest_1.Assert.AreNotSame(true, false);
        UnitTest_1.Assert.Fail();
    }
    catch (_b) { }
});
unitTest.AddTestCase("Null assert", function () {
    UnitTest_1.Assert.IsNull(null);
    try {
        UnitTest_1.Assert.IsNull(false);
        UnitTest_1.Assert.Fail();
    }
    catch (_a) { }
    UnitTest_1.Assert.IsNotNull({});
    try {
        UnitTest_1.Assert.IsNotNull(null);
        UnitTest_1.Assert.Fail();
    }
    catch (_b) { }
});
unitTest.AddTestCase("Define assert", function () {
    var undefinedVariable;
    var definedVariable = false;
    UnitTest_1.Assert.IsUndefined(undefinedVariable);
    try {
        UnitTest_1.Assert.IsUndefined(definedVariable);
        UnitTest_1.Assert.Fail();
    }
    catch (_a) { }
    UnitTest_1.Assert.IsDefined(definedVariable);
    try {
        UnitTest_1.Assert.IsDefined(undefinedVariable);
        UnitTest_1.Assert.Fail();
    }
    catch (_b) { }
});
unitTest.AddTestCase("Boolean assert", function () {
    UnitTest_1.Assert.IsTrue(true);
    try {
        UnitTest_1.Assert.IsTrue(false);
        UnitTest_1.Assert.Fail();
    }
    catch (_a) { }
    UnitTest_1.Assert.IsFalse(false);
    try {
        UnitTest_1.Assert.IsFalse(true);
        UnitTest_1.Assert.Fail();
    }
    catch (_b) { }
});
unitTest.AddTestCase("Error count", function () {
    UnitTest_1.Assert.ResetErrorCount();
    UnitTest_1.Assert.AreEqual(0, UnitTest_1.Assert.ErrorCount());
    try {
        UnitTest_1.Assert.IsFalse(true);
        UnitTest_1.Assert.Fail();
    }
    catch (_a) { }
    try {
        UnitTest_1.Assert.IsFalse(true);
        UnitTest_1.Assert.Fail();
    }
    catch (_b) { }
    try {
        UnitTest_1.Assert.IsFalse(true);
        UnitTest_1.Assert.Fail();
    }
    catch (_c) { }
    UnitTest_1.Assert.AreEqual(3, UnitTest_1.Assert.ErrorCount());
});
unitTest.Run();
