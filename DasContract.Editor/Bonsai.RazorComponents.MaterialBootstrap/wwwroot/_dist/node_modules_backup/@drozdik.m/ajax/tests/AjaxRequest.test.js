exports.__esModule = true;
var unit_test_1 = require("@drozdik.m/unit-test");
var AjaxRequest_1 = require("../src/AjaxRequest");
var HTTPMethod_1 = require("../src/HTTPMethod");
var Ajax_1 = require("../src/Ajax");
var unitTest = new unit_test_1.UnitTest("AjaxRequest");
unitTest.AddTestCase("GetFulllUrl, basic", function () {
    var request = new AjaxRequest_1.AjaxRequest(HTTPMethod_1.HTTPMethod.GET, "target/");
    unit_test_1.Assert.AreEqual("target/", request.GetFullUrl());
});
unitTest.AddTestCase("GetFulllUrl, basic 2", function () {
    var request = new AjaxRequest_1.AjaxRequest(HTTPMethod_1.HTTPMethod.GET, "target/some");
    unit_test_1.Assert.AreEqual("target/some", request.GetFullUrl());
});
unitTest.AddTestCase("GetFulllUrl, '/'", function () {
    var request = new AjaxRequest_1.AjaxRequest(HTTPMethod_1.HTTPMethod.GET, "target");
    unit_test_1.Assert.AreEqual("target", request.GetFullUrl());
});
unitTest.AddTestCase("GetFulllUrl, empty", function () {
    var request = new AjaxRequest_1.AjaxRequest(HTTPMethod_1.HTTPMethod.GET, "");
    unit_test_1.Assert.AreEqual("", request.GetFullUrl());
});
unitTest.AddTestCase("GetFulllUrl, one parameter", function () {
    var request = new AjaxRequest_1.AjaxRequest(HTTPMethod_1.HTTPMethod.GET, "", [
        new Ajax_1.AjaxParameter("nam", "valu")
    ]);
    unit_test_1.Assert.AreEqual("/?nam=valu", request.GetFullUrl());
});
unitTest.AddTestCase("GetFulllUrl, multiple parameters", function () {
    var request = new AjaxRequest_1.AjaxRequest(HTTPMethod_1.HTTPMethod.GET, "", [
        new Ajax_1.AjaxParameter("nam", "valu"),
        new Ajax_1.AjaxParameter("one", "two"),
        new Ajax_1.AjaxParameter("three", "four")
    ]);
    unit_test_1.Assert.AreEqual("/?nam=valu&one=two&three=four", request.GetFullUrl());
});
unitTest.Run();
