@page "/paging"

@code {
    public bool Loading { get; set; } = false;
    public int TotalItemsCount { get; set; } = 10;
    public int ItemsPerPage { get; set; } = 2;
    public PagingData PagingData { get; set; } = null;
    public int ChangeCount { get; set; } = 0;
}

<h1>Paging Test</h1>

<div class="my-5">
    <input type="button" value="Loading: true" @onclick="@(e => { Loading = true; })" />
    <input type="button" value="Loading: false" @onclick="@(e => { Loading = false; })" />
</div>

<div class="my-5">
    <label>TotalItemsCount</label>
    <input type="number" @oninput="@(e => { TotalItemsCount = int.Parse(e.Value.ToString()); })" value="@TotalItemsCount" />
    <label>ItemsPerPage</label>
    <input type="number" @oninput="@(e => { ItemsPerPage = int.Parse(e.Value.ToString()); })" value="@ItemsPerPage" />
</div>

<div class="my-4">
    <p>Change count: @ChangeCount</p>
    @if (PagingData == null)
    {
        <p>Pagin data is null</p>
    }
    else
    {
        <p>
            PagesCount: @PagingData.PagesCount <br />
            TotalItemsCount: @PagingData.TotalItemsCount <br />
            From: @PagingData.From <br />
            To: @PagingData.To <br />
            CurrentPage: @PagingData.CurrentPage <br />
            ItemsPerPage: @PagingData.ItemsPerPage <br />
        </p>
    }
</div>

<Paging OnChange="@(e => { PagingData = e; ChangeCount++; StateHasChanged(); })" TotalItemsCount="@TotalItemsCount" ItemsPerPage="@ItemsPerPage" Loading="@Loading" />

