@page "/contract"

@code{
    public bool Loading { get; set; } = false;
    public bool ReadOnly { get; set; } = false;

    EditorContract Contract = new EditorContract()
    {
        DataModel = new ContractDataModel()
        {
            Entities = new List<ContractEntity>()
    {
                new ContractEntity()
                {
                     Name = "Entity 1",
                },
                new ContractEntity()
                {
                     Name = "Entity 2",
                     PrimitiveProperties = new List<PrimitiveContractProperty>()
             {
                         new PrimitiveContractProperty()
                         {
                            IsMandatory = true,
                            Name = "Property 1",
                            Type = PrimitiveContractPropertyType.Bool
                         }
                     }
                }
            }
        },

        Processes = new ContractProcesses()
        {
            Main = new ContractProcess()
            {
                ProcessElements = new List<ContractProcessElement>()
        {
                    new ContractScriptActivity()
                    {
                        Name = "Activity 1"
                    },
                    new ContractBusinessRuleActivity()
                    {
                        Name = "Activity 2"
                    },
                    new ContractUserActivity()
                    {
                        Name = "Activity 3"
                    }
                }
            }
        }
    };
}

<h1>Contract data model editor</h1>

<div class="my-5">
    <input type="button" value="Loading: true" @onclick="@(e => { Loading = true; })" />
    <input type="button" value="Loading: false" @onclick="@(e => { Loading = false; })" />
</div>


<ContractEditor Contract="@Contract" Loading="@Loading" />