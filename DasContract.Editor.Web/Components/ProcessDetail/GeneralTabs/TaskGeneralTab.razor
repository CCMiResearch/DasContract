@using DasContract.Abstraction.Processes.Tasks
@using DasContract.Abstraction.Data

@if (Task.InstanceType != Abstraction.Processes.Tasks.InstanceType.Single)
{
    <TabSection SectionName="Multi Instance">
        <div class="mb-3">
            <label class="form-label">Loop Collection</label>
            <Select2 TItem="Property"
                     Options="DataModelManager.GetCollectionProperties()"
                     ContentSelector="(p) => p.Name"
                     ValueSelector="(p) => p.Id"
                     Id="@($"{Task.Id}-loop-collection")"
                     Selected="@(GetSelectedCollectionList())"
                     SelectedChanged="@((selected) => Task.LoopCollection = selected.FirstOrDefault()?.Id)"
                     Multiple="false" />
        </div>

        <div class="mb-3">
            <label for="@($"loop-cardinality-{Task.Id}")" class="form-label">Loop Cardinality</label>
            <input class="form-control" id="@($"loop-cardinality-{Task.Id}")" @bind-value="Task.LoopCardinality">
        </div>
    </TabSection>
}

@switch (Task)
{
    case UserTask userTask:
        <UserTaskGeneralTab UserTask="userTask" />
        break;
    case CallActivity callActivity:
        <CallActivityGeneralTab CallActivity="callActivity" />
        break;
}
